from api_client import get_hh_vacancies
from data_processor import process_vacancies
from visualizer import analyze_and_visualize, setup_visuals
import traceback
import sys
import os

print("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ü–£–°–ö–ê ===")

try:
    print("–ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ api_client...")
    from api_client import get_hh_vacancies
    print("‚úÖ api_client –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ api_client: {str(e)}")
    traceback.print_exc()

try:
    print("–ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ data_processor...")
    from data_processor import process_vacancies
    print("‚úÖ data_processor –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ data_processor: {str(e)}")
    traceback.print_exc()

try:
    print("–ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ visualizer...")
    from visualizer import analyze_and_visualize, setup_visuals
    print("‚úÖ visualizer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ visualizer: {str(e)}")
    traceback.print_exc()

print("\n=== –ó–ê–ü–£–°–ö –û–°–ù–û–í–ù–û–ô –ü–†–û–ì–†–ê–ú–ú–´ ===\n")

def main():
    # –°–æ–∑–¥–∞—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    os.makedirs("data/processed", exist_ok=True)
    os.makedirs("results/figures", exist_ok=True)
    print("üîÑ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞–∫–∞–Ω—Å–∏–π Data Scientist")
    setup_visuals()
    
    try:
        print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å hh.ru...")
        vacancies = get_hh_vacancies()
        
        if vacancies:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(vacancies)} –≤–∞–∫–∞–Ω—Å–∏–π")
            print("2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
            df = process_vacancies(vacancies)
            
            if not df.empty:
                print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(df)} –∑–∞–ø–∏—Å–µ–π")
                print("3. –ê–Ω–∞–ª–∏–∑ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è...")
                analyze_and_visualize(df)
            else:
                print("‚ö†Ô∏è –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å hh.ru")
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        traceback.print_exc()
    
    print("üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()